<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hospital.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.hospital.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="userpassword" jdbcType="VARCHAR" property="userpassword" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="is_schedul" jdbcType="CHAR" property="isSchedul" />
    <result column="department_no" jdbcType="INTEGER" property="departmentNo" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="iphone" jdbcType="CHAR" property="iphone" />
    <result column="adderst" jdbcType="VARCHAR" property="adderst" />
    <result column="mes" jdbcType="VARCHAR" property="mes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, userpassword, role, position, is_schedul, department_no, department_name, 
    name, iphone, adderst, mes
  </sql>
  <select id="selectByExample" parameterType="com.hospital.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hospital.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hospital.model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (username, userpassword, role, 
      position, is_schedul, department_no, 
      department_name, name, iphone, 
      adderst, mes)
    values (#{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, 
      #{position,jdbcType=VARCHAR}, #{isSchedul,jdbcType=CHAR}, #{departmentNo,jdbcType=INTEGER}, 
      #{departmentName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iphone,jdbcType=CHAR}, 
      #{adderst,jdbcType=VARCHAR}, #{mes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hospital.model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="userpassword != null">
        userpassword,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="isSchedul != null">
        is_schedul,
      </if>
      <if test="departmentNo != null">
        department_no,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="iphone != null">
        iphone,
      </if>
      <if test="adderst != null">
        adderst,
      </if>
      <if test="mes != null">
        mes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="isSchedul != null">
        #{isSchedul,jdbcType=CHAR},
      </if>
      <if test="departmentNo != null">
        #{departmentNo,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iphone != null">
        #{iphone,jdbcType=CHAR},
      </if>
      <if test="adderst != null">
        #{adderst,jdbcType=VARCHAR},
      </if>
      <if test="mes != null">
        #{mes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hospital.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userpassword != null">
        userpassword = #{record.userpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.isSchedul != null">
        is_schedul = #{record.isSchedul,jdbcType=CHAR},
      </if>
      <if test="record.departmentNo != null">
        department_no = #{record.departmentNo,jdbcType=INTEGER},
      </if>
      <if test="record.departmentName != null">
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.iphone != null">
        iphone = #{record.iphone,jdbcType=CHAR},
      </if>
      <if test="record.adderst != null">
        adderst = #{record.adderst,jdbcType=VARCHAR},
      </if>
      <if test="record.mes != null">
        mes = #{record.mes,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      userpassword = #{record.userpassword,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      is_schedul = #{record.isSchedul,jdbcType=CHAR},
      department_no = #{record.departmentNo,jdbcType=INTEGER},
      department_name = #{record.departmentName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      iphone = #{record.iphone,jdbcType=CHAR},
      adderst = #{record.adderst,jdbcType=VARCHAR},
      mes = #{record.mes,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hospital.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        userpassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="isSchedul != null">
        is_schedul = #{isSchedul,jdbcType=CHAR},
      </if>
      <if test="departmentNo != null">
        department_no = #{departmentNo,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iphone != null">
        iphone = #{iphone,jdbcType=CHAR},
      </if>
      <if test="adderst != null">
        adderst = #{adderst,jdbcType=VARCHAR},
      </if>
      <if test="mes != null">
        mes = #{mes,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hospital.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      userpassword = #{userpassword,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      is_schedul = #{isSchedul,jdbcType=CHAR},
      department_no = #{departmentNo,jdbcType=INTEGER},
      department_name = #{departmentName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      iphone = #{iphone,jdbcType=CHAR},
      adderst = #{adderst,jdbcType=VARCHAR},
      mes = #{mes,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>