<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hospital.mapper.CheckApplicationMapper">
  <resultMap id="BaseResultMap" type="com.hospital.model.CheckApplication">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="registration_info_no" jdbcType="INTEGER" property="registrationInfoNo" />
    <result column="medical_record" jdbcType="CHAR" property="medicalRecord" />
    <result column="check_application_name" jdbcType="VARCHAR" property="checkApplicationName" />
    <result column="patient_name" jdbcType="VARCHAR" property="patientName" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="outpatient_doctor_no" jdbcType="INTEGER" property="outpatientDoctorNo" />
    <result column="outpatient_doctor_name" jdbcType="VARCHAR" property="outpatientDoctorName" />
    <result column="requirements" jdbcType="VARCHAR" property="requirements" />
    <result column="check_item_nos" jdbcType="VARCHAR" property="checkItemNos" />
    <result column="check_item_names" jdbcType="VARCHAR" property="checkItemNames" />
    <result column="use_state" jdbcType="CHAR" property="useState" />
    <result column="is_fee" jdbcType="CHAR" property="isFee" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="check_type" jdbcType="CHAR" property="checkType" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="bank2" jdbcType="VARCHAR" property="bank2" />
    <result column="bank3" jdbcType="VARCHAR" property="bank3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, registration_info_no, medical_record, check_application_name, patient_name, department_name, 
    outpatient_doctor_no, outpatient_doctor_name, requirements, check_item_nos, check_item_names, 
    use_state, is_fee, price, create_time, check_type, state, bank2, bank3
  </sql>
  <select id="selectByExample" parameterType="com.hospital.model.CheckApplicationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from check_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from check_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hospital.model.CheckApplicationExample">
    delete from check_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hospital.model.CheckApplication">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into check_application (registration_info_no, medical_record, check_application_name, 
      patient_name, department_name, outpatient_doctor_no, 
      outpatient_doctor_name, requirements, check_item_nos, 
      check_item_names, use_state, is_fee, 
      price, create_time, check_type, 
      state, bank2, bank3)
    values (#{registrationInfoNo,jdbcType=INTEGER}, #{medicalRecord,jdbcType=CHAR}, #{checkApplicationName,jdbcType=VARCHAR}, 
      #{patientName,jdbcType=VARCHAR}, #{departmentName,jdbcType=VARCHAR}, #{outpatientDoctorNo,jdbcType=INTEGER}, 
      #{outpatientDoctorName,jdbcType=VARCHAR}, #{requirements,jdbcType=VARCHAR}, #{checkItemNos,jdbcType=VARCHAR}, 
      #{checkItemNames,jdbcType=VARCHAR}, #{useState,jdbcType=CHAR}, #{isFee,jdbcType=CHAR}, 
      #{price,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{checkType,jdbcType=CHAR}, 
      #{state,jdbcType=CHAR}, #{bank2,jdbcType=VARCHAR}, #{bank3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hospital.model.CheckApplication">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into check_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="registrationInfoNo != null">
        registration_info_no,
      </if>
      <if test="medicalRecord != null">
        medical_record,
      </if>
      <if test="checkApplicationName != null">
        check_application_name,
      </if>
      <if test="patientName != null">
        patient_name,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="outpatientDoctorNo != null">
        outpatient_doctor_no,
      </if>
      <if test="outpatientDoctorName != null">
        outpatient_doctor_name,
      </if>
      <if test="requirements != null">
        requirements,
      </if>
      <if test="checkItemNos != null">
        check_item_nos,
      </if>
      <if test="checkItemNames != null">
        check_item_names,
      </if>
      <if test="useState != null">
        use_state,
      </if>
      <if test="isFee != null">
        is_fee,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="checkType != null">
        check_type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="bank2 != null">
        bank2,
      </if>
      <if test="bank3 != null">
        bank3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="registrationInfoNo != null">
        #{registrationInfoNo,jdbcType=INTEGER},
      </if>
      <if test="medicalRecord != null">
        #{medicalRecord,jdbcType=CHAR},
      </if>
      <if test="checkApplicationName != null">
        #{checkApplicationName,jdbcType=VARCHAR},
      </if>
      <if test="patientName != null">
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="outpatientDoctorNo != null">
        #{outpatientDoctorNo,jdbcType=INTEGER},
      </if>
      <if test="outpatientDoctorName != null">
        #{outpatientDoctorName,jdbcType=VARCHAR},
      </if>
      <if test="requirements != null">
        #{requirements,jdbcType=VARCHAR},
      </if>
      <if test="checkItemNos != null">
        #{checkItemNos,jdbcType=VARCHAR},
      </if>
      <if test="checkItemNames != null">
        #{checkItemNames,jdbcType=VARCHAR},
      </if>
      <if test="useState != null">
        #{useState,jdbcType=CHAR},
      </if>
      <if test="isFee != null">
        #{isFee,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkType != null">
        #{checkType,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="bank2 != null">
        #{bank2,jdbcType=VARCHAR},
      </if>
      <if test="bank3 != null">
        #{bank3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hospital.model.CheckApplicationExample" resultType="java.lang.Long">
    select count(*) from check_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update check_application
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.registrationInfoNo != null">
        registration_info_no = #{record.registrationInfoNo,jdbcType=INTEGER},
      </if>
      <if test="record.medicalRecord != null">
        medical_record = #{record.medicalRecord,jdbcType=CHAR},
      </if>
      <if test="record.checkApplicationName != null">
        check_application_name = #{record.checkApplicationName,jdbcType=VARCHAR},
      </if>
      <if test="record.patientName != null">
        patient_name = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentName != null">
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.outpatientDoctorNo != null">
        outpatient_doctor_no = #{record.outpatientDoctorNo,jdbcType=INTEGER},
      </if>
      <if test="record.outpatientDoctorName != null">
        outpatient_doctor_name = #{record.outpatientDoctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.requirements != null">
        requirements = #{record.requirements,jdbcType=VARCHAR},
      </if>
      <if test="record.checkItemNos != null">
        check_item_nos = #{record.checkItemNos,jdbcType=VARCHAR},
      </if>
      <if test="record.checkItemNames != null">
        check_item_names = #{record.checkItemNames,jdbcType=VARCHAR},
      </if>
      <if test="record.useState != null">
        use_state = #{record.useState,jdbcType=CHAR},
      </if>
      <if test="record.isFee != null">
        is_fee = #{record.isFee,jdbcType=CHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkType != null">
        check_type = #{record.checkType,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.bank2 != null">
        bank2 = #{record.bank2,jdbcType=VARCHAR},
      </if>
      <if test="record.bank3 != null">
        bank3 = #{record.bank3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update check_application
    set id = #{record.id,jdbcType=INTEGER},
      registration_info_no = #{record.registrationInfoNo,jdbcType=INTEGER},
      medical_record = #{record.medicalRecord,jdbcType=CHAR},
      check_application_name = #{record.checkApplicationName,jdbcType=VARCHAR},
      patient_name = #{record.patientName,jdbcType=VARCHAR},
      department_name = #{record.departmentName,jdbcType=VARCHAR},
      outpatient_doctor_no = #{record.outpatientDoctorNo,jdbcType=INTEGER},
      outpatient_doctor_name = #{record.outpatientDoctorName,jdbcType=VARCHAR},
      requirements = #{record.requirements,jdbcType=VARCHAR},
      check_item_nos = #{record.checkItemNos,jdbcType=VARCHAR},
      check_item_names = #{record.checkItemNames,jdbcType=VARCHAR},
      use_state = #{record.useState,jdbcType=CHAR},
      is_fee = #{record.isFee,jdbcType=CHAR},
      price = #{record.price,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      check_type = #{record.checkType,jdbcType=CHAR},
      state = #{record.state,jdbcType=CHAR},
      bank2 = #{record.bank2,jdbcType=VARCHAR},
      bank3 = #{record.bank3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hospital.model.CheckApplication">
    update check_application
    <set>
      <if test="registrationInfoNo != null">
        registration_info_no = #{registrationInfoNo,jdbcType=INTEGER},
      </if>
      <if test="medicalRecord != null">
        medical_record = #{medicalRecord,jdbcType=CHAR},
      </if>
      <if test="checkApplicationName != null">
        check_application_name = #{checkApplicationName,jdbcType=VARCHAR},
      </if>
      <if test="patientName != null">
        patient_name = #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="outpatientDoctorNo != null">
        outpatient_doctor_no = #{outpatientDoctorNo,jdbcType=INTEGER},
      </if>
      <if test="outpatientDoctorName != null">
        outpatient_doctor_name = #{outpatientDoctorName,jdbcType=VARCHAR},
      </if>
      <if test="requirements != null">
        requirements = #{requirements,jdbcType=VARCHAR},
      </if>
      <if test="checkItemNos != null">
        check_item_nos = #{checkItemNos,jdbcType=VARCHAR},
      </if>
      <if test="checkItemNames != null">
        check_item_names = #{checkItemNames,jdbcType=VARCHAR},
      </if>
      <if test="useState != null">
        use_state = #{useState,jdbcType=CHAR},
      </if>
      <if test="isFee != null">
        is_fee = #{isFee,jdbcType=CHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkType != null">
        check_type = #{checkType,jdbcType=CHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="bank2 != null">
        bank2 = #{bank2,jdbcType=VARCHAR},
      </if>
      <if test="bank3 != null">
        bank3 = #{bank3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hospital.model.CheckApplication">
    update check_application
    set registration_info_no = #{registrationInfoNo,jdbcType=INTEGER},
      medical_record = #{medicalRecord,jdbcType=CHAR},
      check_application_name = #{checkApplicationName,jdbcType=VARCHAR},
      patient_name = #{patientName,jdbcType=VARCHAR},
      department_name = #{departmentName,jdbcType=VARCHAR},
      outpatient_doctor_no = #{outpatientDoctorNo,jdbcType=INTEGER},
      outpatient_doctor_name = #{outpatientDoctorName,jdbcType=VARCHAR},
      requirements = #{requirements,jdbcType=VARCHAR},
      check_item_nos = #{checkItemNos,jdbcType=VARCHAR},
      check_item_names = #{checkItemNames,jdbcType=VARCHAR},
      use_state = #{useState,jdbcType=CHAR},
      is_fee = #{isFee,jdbcType=CHAR},
      price = #{price,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      check_type = #{checkType,jdbcType=CHAR},
      state = #{state,jdbcType=CHAR},
      bank2 = #{bank2,jdbcType=VARCHAR},
      bank3 = #{bank3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>